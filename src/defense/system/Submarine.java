/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package defense.system;

import defense.system.Observer.Observable;
import defense.system.Observer.Observer;
import defense.system.Observer.Slider;
import java.awt.Color;
import java.awt.Image;
import javax.swing.ImageIcon;

/**
 *
 * @author User
 */
public class Submarine extends javax.swing.JFrame implements Observer{
     
    /**
     * Creates new form Submarine
     */
    private final Observable observable;
    private final MainController m1;
    public Submarine() {
        this.observable=Observable.getInstance();
        this.m1=MainController.getInstance();
        initComponents();
        setTitle("Submarine");
        setLocation(40,365);
        Image icon = new ImageIcon(this.getClass().getResource("/img/Submarine.png")).getImage();
        this.setIconImage(icon);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnShoot = new javax.swing.JButton();
        btnSonar = new javax.swing.JButton();
        btnTomahawk = new javax.swing.JButton();
        btnTrident = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        chckPosition = new javax.swing.JCheckBox();
        jSpinner1 = new javax.swing.JSpinner();
        jSpinner2 = new javax.swing.JSpinner();
        jSlider1 = new javax.swing.JSlider();
        jSlider2 = new javax.swing.JSlider();
        jScrollPane1 = new javax.swing.JScrollPane();
        SubjTextArea = new javax.swing.JTextArea();
        txtSubmarine = new javax.swing.JTextField();
        jButtonS = new javax.swing.JButton();
        AreaClearjLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnShoot.setEnabled(false);
        btnShoot.setText("Shoot");
        btnShoot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShootActionPerformed(evt);
            }
        });

        btnSonar.setEnabled(false);
        btnSonar.setText("Sonar Operation");
        btnSonar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSonarActionPerformed(evt);
            }
        });

        btnTomahawk.setEnabled(false);
        btnTomahawk.setText("Tomahawk Missile");
        btnTomahawk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTomahawkActionPerformed(evt);
            }
        });

        btnTrident.setEnabled(false);
        btnTrident.setText("Trident-2 Missile");
        btnTrident.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTridentActionPerformed(evt);
            }
        });

        jLabel1.setText("Ammo Count");

        jLabel2.setText("Soldier Count");

        chckPosition.setText("Position");
        chckPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chckPositionActionPerformed(evt);
            }
        });

        jSpinner1.setValue(8);

        jSpinner2.setValue(10000);

        jSlider1.setMajorTickSpacing(20);
        jSlider1.setMinorTickSpacing(10);
        jSlider1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);

        jSlider2.setMajorTickSpacing(20);
        jSlider2.setMinorTickSpacing(10);
        jSlider2.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider2.setPaintLabels(true);
        jSlider2.setPaintTicks(true);

        SubjTextArea.setColumns(20);
        SubjTextArea.setRows(5);
        SubjTextArea.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        SubjTextArea.setEnabled(false);
        jScrollPane1.setViewportView(SubjTextArea);

        txtSubmarine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSubmarineActionPerformed(evt);
            }
        });

        jButtonS.setText("Send");
        jButtonS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSActionPerformed(evt);
            }
        });

        AreaClearjLabel1.setForeground(new java.awt.Color(255, 0, 0));
        AreaClearjLabel1.setText("Area Not Cleared ");

        jLabel3.setText("Energy");

        jLabel4.setText("Oxigen");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(txtSubmarine, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jButtonS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnShoot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnTomahawk, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(AreaClearjLabel1)))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnTrident, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSonar, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(chckPosition)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(19, 19, 19))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(AreaClearjLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnShoot)
                            .addComponent(btnSonar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnTomahawk)
                            .addComponent(btnTrident))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonS)
                            .addComponent(txtSubmarine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jSpinner2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chckPosition)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSonarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSonarActionPerformed
         int currentAmmoCount = (int) jSpinner2.getValue();
            if (currentAmmoCount > 0) {
                jSpinner2.setValue(currentAmmoCount - 1);
             } else {
                btnSonar.setEnabled(false);
             }
    }//GEN-LAST:event_btnSonarActionPerformed

    private void chckPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chckPositionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chckPositionActionPerformed

    private void jButtonSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSActionPerformed
        m1.setMassage("Submarine : "+txtSubmarine.getText());
        txtSubmarine.setText("");
    }//GEN-LAST:event_jButtonSActionPerformed

    private void txtSubmarineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSubmarineActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSubmarineActionPerformed

    private void btnTridentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTridentActionPerformed
        int currentAmmoCount = (int) jSpinner2.getValue();
            if (currentAmmoCount > 0) {
                jSpinner2.setValue(currentAmmoCount - 1);
             } else {
                btnTrident.setEnabled(false);
             }
    }//GEN-LAST:event_btnTridentActionPerformed

    private void btnShootActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShootActionPerformed
        int currentAmmoCount = (int) jSpinner2.getValue();
            if (currentAmmoCount > 0) {
                jSpinner2.setValue(currentAmmoCount - 1);
             } else {
                btnShoot.setEnabled(false);
             }
    }//GEN-LAST:event_btnShootActionPerformed

    private void btnTomahawkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTomahawkActionPerformed
         int currentAmmoCount = (int) jSpinner2.getValue();
            if (currentAmmoCount > 0) {
                jSpinner2.setValue(currentAmmoCount - 1);
             } else {
                btnTomahawk.setEnabled(false);
             }
    }//GEN-LAST:event_btnTomahawkActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AreaClearjLabel1;
    private javax.swing.JTextArea SubjTextArea;
    private javax.swing.JButton btnShoot;
    private javax.swing.JButton btnSonar;
    private javax.swing.JButton btnTomahawk;
    private javax.swing.JButton btnTrident;
    private javax.swing.JCheckBox chckPosition;
    private javax.swing.JButton jButtonS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JSpinner jSpinner2;
    private javax.swing.JTextField txtSubmarine;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setValue(String value) {
        if(value.equals("Area Cleared")){
            AreaClearjLabel1.setText(value);
            AreaClearjLabel1.setForeground(Color.BLACK);
        }else{
             AreaClearjLabel1.setText(value);
            AreaClearjLabel1.setForeground(Color.RED);
        }
    }


    @Override
    public void setMessage(String message) {
         if(message!=null){
       SubjTextArea.append(message+"\n");
    }
    }

    @Override
    public void setPrivate(String message, int index) {
        if(index==3){
           SubjTextArea.append(message+"\n");
        }
    }

    @Override
    public void Strength(int strength) {
        Slider sliderValue = Slider.values()[strength];
        if (chckPosition.isSelected()) {
        switch (sliderValue) {
                case LOW:
                    btnShoot.setEnabled(false);
                    btnSonar.setEnabled(false);
                    btnTomahawk.setEnabled(false);
                    btnTrident.setEnabled(false);
                    break;
                case MEDIUM:
                    btnShoot.setEnabled(true);
                    btnSonar.setEnabled(false);
                    btnTomahawk.setEnabled(false);
                    btnTrident.setEnabled(false);
                    break;
                case HIGH:
                    btnShoot.setEnabled(true);
                    btnSonar.setEnabled(true);
                    btnTomahawk.setEnabled(false);
                    btnTrident.setEnabled(false);
                    break;
                case STRONG:
                    btnShoot.setEnabled(true);
                    btnSonar.setEnabled(true);
                    btnTomahawk.setEnabled(true);
                    btnTrident.setEnabled(true);
                    break;
                case COLOSED:
                default:
                    btnShoot.setEnabled(false);
                    btnSonar.setEnabled(false);
                    btnTomahawk.setEnabled(false);
                    btnTrident.setEnabled(false);
                    break;
            }
        } else {
            btnShoot.setEnabled(false);
            btnSonar.setEnabled(false);
            btnTomahawk.setEnabled(false);
            btnTrident.setEnabled(false);
        }
    }

    @Override
    public String[] setCount() {
        String[] ar ={jSpinner1.getValue().toString(),jSpinner2.getValue().toString(),Integer.toString(jSlider1.getValue())};
        return ar;
    }

}
